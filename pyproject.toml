[tool.black]                # Configuration for Black code formatter
line-length = 150                   # Set max line length to 88: balances readability and line-wrapping
target-version = ["py312"]          # Target Python 3.12 syntax for formatting
skip-string-normalization = true    # Preserve original quote style; avoids messy escaping in JSON strings

[tool.isort]                # Configuration for isort (import sorting tool)
profile = "black"                   # Match Black’s style for import formatting to avoid conflicts
line_length = 100                   # Keep import lines shorter than Black’s max line length
include_trailing_comma = false      # Ensure trailing commas for multi-line imports (Black-compatible)
force_sort_within_sections = true   # Sort imports within sections but preserve overall grouping
order_by_type = false               # Don’t separate imports by object type (functions, classes, etc.)
lines_after_imports = 2             # Leave two blank lines after imports for better spacing
combine_as_imports = true           # Merge 'as' imports from the same module onto one line
balanced_wrapping = true            # Use balanced wrapping for multi-line imports for cleaner alignment
ensure_newline_before_comments = true # Add a newline before import comments to keep them readable
skip_gitignore = true               # Skip files listed in .gitignore
float_to_top = false                # Don’t move imports above module-level docstrings or comments
no_sections = true                  # Disable blank lines between stdlib / third-party / local section
#multi_line_output = 5               # Use vertical hanging indent for multi-line imports; improves readability

[tool.pytest.ini_options]   # Configuration for pytest (test runner)
minversion = "8.0"                  # Require pytest 8.0+; ensures features/options used are supported
addopts = "-ra -q --color=yes"      # -ra: show extra summary for skipped/failed tests, -q: reduce verbosity for clarity
testpaths = ["tests"]               # Only look in the tests/ directory for test discovery; avoids running irrelevant files

[tool.mypy]                 # Configuration for mypy (static type checker)
python_version = 3.12              # Type check using Python 3.12 rules for consistency with your code
ignore_missing_imports = true      # Suppress errors for missing type hints in third-party libraries
strict = true                      # Enable strict mode for strong type checking across your codebase
strict_optional = false            # Disable enforcement of Optional (nullable) types
warn_unused_ignores = true         # Warn if '# type: ignore' comments are unnecessary
disallow_untyped_defs = false      # Allow untyped function definitions to reduce friction in mixed-typed code
disallow_untyped_calls = false     # Allow calls to untyped functions; avoids noise when gradually typing code
warn_return_any = false            # Don’t warn when returning Any; minimizes false positives in complex functions
show_error_codes = true            # Display error codes alongside messages for clarity
allow_redefinition = true          # Update the inferred type on reassignment


# Handled by Doxyfile already
# [tool.doxygen]              # Configuration for Doxygen (documentation generator)
# INPUT = "src"                        # Specify source code folder; tells Doxygen what to document
# RECURSIVE = "YES"                    # Include subdirectories; ensures complete documentation
# OUTPUT_DIRECTORY = "docs/doxygen"    # Output folder for generated docs; keeps documentation separate from code

