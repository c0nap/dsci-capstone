name: CI with Docker

on:
  pull_request:
    branches: [ main ]

concurrency:  # Prevent multiple runs on rapid pushes
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build:
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      image-tag: ci

  push:
    uses: ./.github/workflows/push-dev.yml
    needs: test
    secrets: inherit
    with:
      artifact-name: ${{ needs.build.outputs.artifact }}
      private-namespace: c0nap
      image-tag: ci


  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: echo "Downloading images from artifact ${{ needs.build.outputs.artifact }}"

      # 1. Download artifacts
      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.artifact }}

      - name: Load Docker images
        run: |
          docker load < docker-images-ci.tar


      # 2. Create test environment
      - name: Download code from repository
        uses: actions/checkout@v4

      - name: Download dummy secrets artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.secrets }}

      - name: Start database containers
        run: make docker-all-dbs

      - name: Wait for databases to be ready
        run: sleep 20   # Postgres, MySQL, MongoDB, Neo4j


      # 3. Start web app and run all pytests
      - name: Start Blazor container in background
        run: make docker-blazor-silent

      - name: Run PyTests with existing images
        run: make docker-test VERBY=1 COLORS=1



