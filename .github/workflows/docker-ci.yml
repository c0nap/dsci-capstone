name: CI with Docker

on:
  pull_request:
    branches: [ main ]

concurrency:  # Prevent multiple runs on rapid pushes
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install make
        run: sudo apt-get update && sudo apt-get install -y make

      - name: Delete old data
        run: make docker-delete-volumes  # Reset usernames / passwords in case .env.example changed

      - name: Create secrets files with fake credentials
        run: |
          make env-dummy OUT=".env"
          make appsettings-dummy OUT="web-app/BlazorApp/appsettings.json" ENVF=".env"
        # ORDER MATTERS ^

      - name: Pull outdated Docker images
        run: make docker-pull || true  # Speeds up the build process; true just in case images dont exist yet

      - name: Build latest Docker images for production
        run: |
          make docker-build-prod
          make docker-retag-to-dev

      - name: Start database containers
        run: make docker-all-dbs

      - name: Wait for databases to be ready
        run: sleep 20

      - name: DEBUG - Errors in DB containers?
        run: |
          docker ps -a
          docker logs container-mysql
          docker logs container-neo4j

      - name: Start Blazor container
        run: make docker-blazor-silent  # Requires a dev-labelled image

      - name: Start Python container and run tests
        run: make docker-test-raw  # Requires a dev-labelled image

      - name: Notify on failure
        if: failure()
        run: echo "::error::Deployment failed! Check logs."

      - name: Cleanup
        if: always()   # Runs even if previous steps fail
        run: make docker-full-reset || true  # Cleanup failures wont fail the workflow
